/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.davidmerchan.tareasya.presentation;

import com.davidmerchan.tareasya.data.TaskDataSource;
import com.davidmerchan.tareasya.data.TaskRepositoryImpl;
import com.davidmerchan.tareasya.domain.DeleteTaskUseCase;
import com.davidmerchan.tareasya.domain.GetTasksUseCase;
import com.davidmerchan.tareasya.domain.SaveTaskUseCase;
import com.davidmerchan.tareasya.domain.UpdateTaskUseCase;
import com.davidmerchan.tareasya.domain.model.Task;
import com.davidmerchan.tareasya.domain.model.TaskStatus;
import static com.davidmerchan.tareasya.domain.model.TaskStatus.DONE;
import static com.davidmerchan.tareasya.domain.model.TaskStatus.IN_PROGRESS;
import static com.davidmerchan.tareasya.domain.model.TaskStatus.TO_DO;
import com.davidmerchan.tareasya.domain.repository.TaskRepository;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.stream.IntStream;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
        
public class Home extends javax.swing.JFrame {
    
    private TaskPresenter taskPresenter = new TaskPresenter();

    DefaultTableModel todoTableModel = new DefaultTableModel(new String[]{"ID", "Titulo", "Fecha", "Categoria"}, 0);
    DefaultTableModel inProgressTableModel = new DefaultTableModel(new String[]{"ID", "Titulo", "Fecha", "Categoria"}, 0);
    DefaultTableModel doneTableModel = new DefaultTableModel(new String[]{"ID", "Titulo", "Fecha", "Categoria"}, 0);
    
    /**
     * Creates new form Home
     */
    public Home() {
        setTitle("Mis tareas");
    }
    
    public void setPresenter(TaskPresenter taskPresenter) {
        this.taskPresenter = taskPresenter;
        initComponents();
    }
    
    public void prepareView() {
        prepareTableModels();
        prepareDateSelectors();
        prepareCategoryAndStatus();
        prepareTableSelector();
    }
    
    private void prepareTableModels() {
        tbTodoList.setModel(todoTableModel);
        tbInProgressList.setModel(inProgressTableModel);
        tbDoneList.setModel(doneTableModel);
    }

    private void prepareDateSelectors() {
        IntStream.rangeClosed(1, 31).forEach(cbDay::addItem);
        IntStream.rangeClosed(1, 12).forEach(cbMonth::addItem);
        IntStream.rangeClosed(2024, 2026).forEach(cbYear::addItem);
    }
    
    private void prepareCategoryAndStatus() {
        String[] statusList = {"Por hacer", "En progreso", "Completada"};
        for (String status : statusList) {
            cbStatus.addItem(status);
        }
        
        String[] categoryList = {"Trabajo", "Estudio", "Personal"};
        for (String category : categoryList) {
            cbCategory.addItem(category);
        }
    }
    
    private void prepareTableSelector() {
        tbTodoList.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            Integer index = tbTodoList.getSelectedRow();
            if(index >= 0) {
                Task task = taskPresenter.todoTasks.get(index);
                selectTask(task);
            }
        });
        tbInProgressList.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            Integer index = tbInProgressList.getSelectedRow();
            if(index >= 0) {
                Task task = taskPresenter.inProgressTasks.get(index);
                selectTask(task);
            }
        });
        tbDoneList.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            Integer index = tbDoneList.getSelectedRow();
            if(index >= 0) {
                Task task = taskPresenter.completedTasks.get(index);
                selectTask(task);
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDatePickerUtil1 = new org.jdatepicker.util.JDatePickerUtil();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDetail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbDay = new javax.swing.JComboBox<>();
        cbMonth = new javax.swing.JComboBox<>();
        cbYear = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cbStatus = new javax.swing.JComboBox<>();
        btnAddTask = new javax.swing.JButton();
        btnUpdateTask = new javax.swing.JButton();
        btnDeleteTask = new javax.swing.JButton();
        btnClearFields = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbTodoList = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbDoneList = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbInProgressList = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Tareas por hacer");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 66, -1, -1));

        jLabel2.setText("Tareas en progreso");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 266, -1, -1));

        jLabel3.setText("Tareas completadas");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 466, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tarea"));

        jLabel4.setText("Titulo");

        jLabel5.setText("Detalle");

        jLabel6.setText("Fecha de terminaci√≥n (DD/MM/AAAA)");

        jLabel7.setText("Categoria");

        jLabel8.setText("Estado");

        cbStatus.setEnabled(false);

        btnAddTask.setText("Agregar Tarea");
        btnAddTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTaskActionPerformed(evt);
            }
        });

        btnUpdateTask.setText("Actualizar Tarea");
        btnUpdateTask.setEnabled(false);
        btnUpdateTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTaskActionPerformed(evt);
            }
        });

        btnDeleteTask.setText("Eliminar Tarea");
        btnDeleteTask.setEnabled(false);
        btnDeleteTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTaskActionPerformed(evt);
            }
        });

        btnClearFields.setText("Limpiar");
        btnClearFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTitle)
                    .addComponent(txtDetail)
                    .addComponent(btnAddTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addComponent(btnClearFields, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnAddTask, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdateTask, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteTask, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearFields, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 89, -1, 550));

        tbTodoList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbTodoList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbTodoList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(tbTodoList);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 89, 461, 159));

        tbDoneList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbDoneList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbDoneList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(tbDoneList);

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 489, 461, 159));

        tbInProgressList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbInProgressList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbInProgressList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(tbInProgressList);

        getContentPane().add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 295, 461, 159));

        jLabel9.setFont(new java.awt.Font("Kefa", 1, 24)); // NOI18N
        jLabel9.setText("Mis tareas");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 19, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTaskActionPerformed
        deleteSelectedTask();
    }//GEN-LAST:event_btnDeleteTaskActionPerformed

    private void btnUpdateTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTaskActionPerformed
        updateSelectedTask();
    }//GEN-LAST:event_btnUpdateTaskActionPerformed

    private void btnAddTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTaskActionPerformed
        addNewTask();
    }//GEN-LAST:event_btnAddTaskActionPerformed

    private void btnClearFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFieldsActionPerformed
        clearAllFields();
    }//GEN-LAST:event_btnClearFieldsActionPerformed

    
    private void addNewTask() {
        
        String title = txtTitle.getText();
        String detail = txtDetail.getText();
        String endDate = getEndDate();
        String category = (String) cbCategory.getSelectedItem();
        
        if(title.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Debe ingresar un t√≠tulo");
            return;
        }
        
        if(detail.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Debe ingresar una descripci√≥n");
            return;
        }
        
        taskPresenter.saveTask(title, detail, endDate, TaskStatus.TO_DO, category);
        updateToDoTaskLists();
        
        clearAllFields();
    }
    
    private void deleteSelectedTask() {
        taskPresenter.deleteTask();
        updateAllTasks();
        clearAllFields();
    }
    
    private void updateSelectedTask() {
        String title = txtTitle.getText();
        String detail = txtDetail.getText();
        String endDate = getEndDate();
        String category = (String) cbCategory.getSelectedItem();
        
        String status = (String) cbStatus.getSelectedItem();
        TaskStatus newStatus = TaskStatus.UNDEFINED;
        
        switch(status) {
            case "Por hacer":
                newStatus = TaskStatus.TO_DO;
                break;
            case "En progreso":
                newStatus = TaskStatus.IN_PROGRESS;
                break;
            case "Completada":
                newStatus = TaskStatus.DONE;
                break;
        }
        
        taskPresenter.updateTask(title, detail, endDate, newStatus, category);
        updateAllTasks();
        clearAllFields();
    }
    
    private void updateAllTasks() {
        updateToDoTaskLists();
        updateInProgressTaskLists();
        updateDoneTaskLists();
    }
    
    private void updateToDoTaskLists() {
        todoTableModel.setRowCount(0);
        
        for(Task task: taskPresenter.todoTasks) {
            todoTableModel.addRow(new Object[]{task.id, task.title, task.endDate, task.category});
        }
    }
    
    private void updateInProgressTaskLists() {
        inProgressTableModel.setRowCount(0);
        
        for(Task task: taskPresenter.inProgressTasks) {
            inProgressTableModel.addRow(new Object[]{task.id, task.title, task.endDate, task.category});
        }
    }
    
    private void updateDoneTaskLists() {
        doneTableModel.setRowCount(0);
        
        for(Task task: taskPresenter.completedTasks) {
            doneTableModel.addRow(new Object[]{task.id, task.title, task.endDate, task.category});
        }
    }
    
    private String getEndDate() {
        Integer day = (Integer) cbDay.getSelectedItem();
        Integer month = (Integer) cbMonth.getSelectedItem();
        Integer year = (Integer) cbYear.getSelectedItem();
        String endDate = day + "/" + month + "/" + year;
        
        return endDate;
    }
    
    private void clearAllFields() {
        txtTitle.setText("");
        txtDetail.setText("");
        cbDay.setSelectedIndex(0);
        cbMonth.setSelectedIndex(0);
        cbYear.setSelectedIndex(0);
        cbCategory.setSelectedIndex(0);
        cbStatus.setSelectedIndex(0);
        
        tbTodoList.clearSelection();
        tbInProgressList.clearSelection();
        tbDoneList.clearSelection();
        
        btnAddTask.setEnabled(true);
        btnDeleteTask.setEnabled(false);
        btnUpdateTask.setEnabled(false);
        cbStatus.setEnabled(false);
        
    }
    
    private void selectTask(Task task) {
        clearAllFields();
        taskPresenter.selectTask(task);
        
        txtTitle.setText(task.title);
        txtDetail.setText(task.detail);
        
        String[] dateSplit = task.endDate.split("/");
        
        Integer day = Integer.parseInt(dateSplit[0]);
        Integer month = Integer.parseInt(dateSplit[1]);
        Integer year = Integer.parseInt(dateSplit[2]);
        
        cbDay.setSelectedItem(day);
        cbMonth.setSelectedItem(month);
        cbYear.setSelectedItem(year);
        
        String status = "";
        switch(task.status) {
            case TO_DO:
                status = "Por hacer";
                break;
            case IN_PROGRESS:
                status = "En progreso";
                break;
            case DONE:
                status = "Completada";
                break;
        }
        
        cbStatus.setSelectedItem(status);
        cbCategory.setSelectedItem(task.category);
        
        btnAddTask.setEnabled(false);
        btnDeleteTask.setEnabled(true);
        btnUpdateTask.setEnabled(true);
        cbStatus.setEnabled(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTask;
    private javax.swing.JButton btnClearFields;
    private javax.swing.JButton btnDeleteTask;
    private javax.swing.JButton btnUpdateTask;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<Integer> cbDay;
    private javax.swing.JComboBox<Integer> cbMonth;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JComboBox<Integer> cbYear;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tbDoneList;
    private javax.swing.JTable tbInProgressList;
    private javax.swing.JTable tbTodoList;
    private javax.swing.JTextField txtDetail;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
